datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// Currency + Book ==========================================================================================================
model Currency {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    name                String              @db.VarChar(50)         @default("")                @map("name")
    acronym             String              @db.VarChar(10)         @default("")                @map("acronym")
    books               Book[]
}

model Book {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    name                String              @db.VarChar(255)        @default("")                @map("name")
    price               Decimal             @db.Decimal(10, 2)      @default(0)                 @map("price")
    language            String              @db.VarChar(50)         @default("")                @map("language")
    description         String              @db.Text                @default("")                @map("description")
    yearPublished       Int                                         @default(0)                 @map("year_published")
    categories          Book_Categories[]
    authors             Book_Authors[]
    rating              Rating[]
    users               User_Books[]
    currencyId          Int                                         @default(0)                 @map("currency_id")
    currency            Currency            @relation(fields: [currencyId], references: [id])
}

// Category + Book_Categories ================================================================================================
model Category {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    name                String              @db.VarChar(255)        @default("")                @map("name")
    books               Book_Categories[]
}

model Book_Categories {
    bookId              Int                                         @default(0)                 @map("book_id")
    categoryId          Int                                         @default(0)                 @map("category_id")
    book                Book                @relation(fields: [bookId], references: [id])
    category            Category            @relation(fields: [categoryId], references: [id])

    @@id([bookId, categoryId])
}

// Author + Book_Authors =====================================================================================================
model Author {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    firstName           String              @db.VarChar(255)        @default("")                @map("first_name")
    lastName            String              @db.VarChar(255)        @default("")                @map("last_name")
    yearsActive         String              @db.VarChar(20)         @default("")                @map("years_active")
    books               Book_Authors[]
}

model Book_Authors {
    bookId              Int                                         @default(0)                 @map("book_id")
    authorId            Int                                         @default(0)                 @map("author_id")
    book                Book                @relation(fields: [bookId], references: [id])
    author              Author              @relation(fields: [authorId], references: [id])

    @@id([bookId, authorId])
}

// Rating ====================================================================================================================
model Rating {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    value               Int                                         @default(0)                 @map("value")
    bookId              Int                                         @default(0)                 @map("book_id")
    userId              Int                                         @default(0)                 @map("user_id")
    book                Book                @relation(fields: [bookId], references: [id])
    user                User                @relation(fields: [userId], references: [id])
}

// User + User_Books ==========================================================================================================
model User {
    id                  Int                 @id                     @default(autoincrement())   @map("id")
    name                String              @db.VarChar(255)        @default("")                @map("name")
    dob                 DateTime                                    @default(now())             @map("dob")
    description         String              @db.VarChar(255)        @default("")                @map("description")
    email               String              @db.VarChar(20)         @default("")                @map("login")
    password            String              @db.VarChar(255)        @default("")                @map("password")
    books               User_Books[]
    rating              Rating[]
}

model User_Books {
    userId              Int                                         @default(0)                 @map("user_id")
    bookId              Int                                         @default(0)                 @map("book_id")
    user                User                @relation(fields: [userId], references: [id])
    book                Book                @relation(fields: [bookId], references: [id])

    @@id([bookId, userId])
}